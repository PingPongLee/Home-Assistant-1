# Turn in patio light at night and off at specified time
- alias: "Havegang - aftenlys"
  trigger:
    # Trigger to turn on - degress below horizo
    - platform: template
      value_template: >-
        state_attr('sun.sun', 'elevation') <= (0 - states('input_number.sun_elevation_light') | float )

    # Trigger to turn off - time
    - platform: template
      value_template: >-
        {{ states('sensor.time') == state_attr('input_datetime.patio_off_time', 'timestamp') | int | timestamp_custom('%H:%M', false) }}

  action:
    - service: system_log.write
      data_template:
        message: >-
            {{ trigger.entity_id }}
        level: debug

    # If trigger is a state ( sensor ) - turn on
    # else turn off
    - service_template: >-
        {% if trigger.platform == "template" %}
          light.turn_off
        {% else %}
          light.turn_on
        {% endif %}
      entity_id:
        - light.havegang
        - light.laeselampe

# Dim/undim lights at night ( or specified time )
# Work: condition about time
- alias: "Natsænkning"
  trigger:
    # Trigger to turn on and off - binary sensor
    - platform: state
      entity_id: sensor.night
  action:
    - service: script.night_brightness
      data_template:
        brightness: >-
          {% if is_state("sensor.night", "on") %}
            {{ states("input_number.dim_low") | int }}
          {% else %}
            {{ states("input_number.dim_high") | int }}
          {% endif %}

# Turn off light in some rooms after a timeout
- alias: "Sluk glemt lys på værelser"
  trigger:
    # Trigger - state of the group of lights i the wanted rooms
    - platform: state
      entity_id:
        - light.colins_vaerelse
        - light.emilios_vaerelse
      from: "off"
      to: "on"
      # Timeout value
      for:
        minutes: "{{ states('input_number.timeout_forgotten_light') | int }}"
  action:
    service: light.turn_off
    # Turn the entity that was the trigger
    data_template:
      entity_id: "{{ trigger.entity_id }}"

# Turn off patio if turned on during the day
- alias: "Sluk havegangen når det er dag"
  trigger:
    - platform: state
      entity_id:
        - light.havegang
      from: "off"
      to: "on"
      for:
        minutes: 1
  condition:
    - condition: template
      value_template: >-
        {{ is_state("sensor.night", "off") }}
  action:
    - service: light.turn_off
      entity_id:
        - light.havegang